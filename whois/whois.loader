/* SAMPLE INPUT
author: Julia Child|F
book: Simca's Cuisine: 100 Classic French Recipes for Every Occasion|1972|0-394-40152-2
authorBook: Simca's Cuisine: 100 Classic French Recipes for Every Occasion|Simone Beck
 */

// CONFIGURATION
// Configures the data loader to create the schema
config create_schema: false, load_new: false, load_vertex_threads: 3

// DATA INPUT
// Define the data input source (a file which can be specified via command line arguments)
// inputfiledir is the directory for the input files

inputfiledir = './'
nickV = File.csv(inputfiledir + "nick.csv").delimiter(',')
identdV = File.csv(inputfiledir + "identd.csv").delimiter(',')
hostnameV = File.csv(inputfiledir + "hostname.csv").delimiter(',')
realnameV = File.csv(inputfiledir + "realname.csv").delimiter(',')
channelV = File.csv(inputfiledir + "channel.csv").delimiter(',')
networkV = File.csv(inputfiledir + "network.csv").delimiter(',')
modeV = File.csv(inputfiledir + "mode.csv").delimiter(',')

nickidentdE = File.csv(inputfiledir + "nickidentd.csv").delimiter(',')
nickhostnameE = File.csv(inputfiledir + "nickhostname.csv").delimiter(',')
nickrealnameE = File.csv(inputfiledir + "nickrealname.csv").delimiter(',')
nickchannelE = File.csv(inputfiledir + "nickchannel.csv").delimiter(',')
networkchannelE = File.csv(inputfiledir + "networkchannel.csv").delimiter(',')
channelmodeE = File.csv(inputfiledir + "channelmode.csv").delimiter(',')

//Specifies what data source to load using which mapper (as defined inline)
  
load(nickV).asVertices {
    label "nickname"
    key "nickname"
}

load(identdV).asVertices {
    label "identd"
    key "identd"
}

load(hostnameV).asVertices {
    label "hostname"
    key "hostname"
}

load(realnameV).asVertices {
    label "realname"
    key "realname"
}

load(channelV).asVertices {
    label "channel"
    key "channel"
}

load(networkV).asVertices {
    label "network"
    key "network"
}

load(modeV).asVertices {
    label "mode"
    key "mode"
}

load(nickidentdE).asEdges {
    label "hasIdent"
    outV "nick", {
        label "nick"
        key "nick"
    }
    inV "ident", {
        label "ident"
        key "ident"
    }
}

load(nickhostnameE).asEdges {
    label "hasHostname"
    outV "nick", {
        label "nick"
        key "nick"
    }
    inV "hostname", {
        label "hostname"
        key "hostname"
    }
}

load(nickrealnameE).asEdges {
    label "hasRealname"
    outV "nick", {
        label "nick"
        key "nick"
    }
    inV "realname", {
        label "realname"
        key "realname"
    }
}

load(nicknetworkE).asEdges {
    label "connectsTo"
    outV "nick", {
        label "nick"
        key "nick"
    }
    inV "network", {
        label "network"
        key "network"
    }
}

load(networkchannelE).asEdges {
    label "has"
    outV "network", {
        label "network"
        key "network"
    }
    inV "channel", {
        label "channel"
        key "channel"
    }
}

load(channelmodeE).asEdges {
    label "hasAccess"
    outV "channel", {
        label "channel"
        key "channel"
    }
    inV "mode", {
        label "mode"
        key "mode"
    }
}

